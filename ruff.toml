# keep separate from pyproject.toml -> clear separation, easier to share
# Exclude a variety of commonly ignored directories.
exclude = [
    ".pyinstaller_hooks",  # added
    ".pyinstaller_dist",  # added
    ".pyinstaller_build",  # added
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

include = ["esibd/**/*.py", "../ESIBD_Explorer_user/plugins/**/*.py"]

# Same as Black.
line-length = 140  # increased
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[lint]
preview = true
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
#"ANN001", "ANN201", "ANN202",, "DOC201", "D107" # gradually introduce
# select = ["A001", "ANN204", "B905", "C403", "C408", "C419", "COM812", "COM819", "D102", "D204", "D205", "D208", "D209", "D210", "D301", "D400",
# "D401", "D404", "D417", "E4", "E7", "E9", "E117", "E202", "E203", "E225", "E226", "E228", "E231", "E251", "E252", "E261", "E262", "E265",
# "E275", "E301", "E302", "ERA001", "F", "I001", "ISC003", "PIE790", "PERF401", "PLC1901", "PLR0911", "PLR0917", "PLR2044", "PLR6104", "PLR6201", "PLW0177", "PTH201", "PTH123", "RET504",
# "RUF005", "RUF013", "RUF052", "RUF100", "SIM018", "SIM212", "SIM401", "T201", "TRY300", "UP039", "UP012", "W605"]
select = ["ALL"]  # temporary use this to explore more rules and pick which ones to keep above
ignore = ["ANN002", "ANN003", "BLE001", "CPY001", "C901", "DOC201", "D100",
"DTZ005", "DTZ006", # would need to shift time stamps back to local time for display in graph
"DOC402",  # only considers google doc strings
"E221", "E501", "F405", "FIX002", "FBT001",
"FBT002", "FBT003", "N802", "N803", "N806", "N815", "N816", "PLW0108", "PLR0904", "PLR0912", "PLR0913", "PLR0915", "PLR6301", "Q000", "RET505",
"S311", "S404", "S603", "S607", "S608", "SLF001", "TD002", "TD003", "TD004", "W293"]
# Ignore `D` rules everywhere except for the `src/` directory.

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.per-file-ignores]
"!esibd/{config.py,const.py,core.py,plugins.py}" = ["ANN001", "D101" , "D102", "D103", "D106", "D107"]  # ignore everywhere but here -> avoids false positives if parent method has types annotated

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"